{
  "info": {
    "name": "Article Service Prices API Tests",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Create Service Type",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{adminToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"name\": \"Lavage Standard\",\n  \"description\": \"Service de lavage standard\",\n  \"isDefault\": true\n}"
        },
        "url": "{{baseUrl}}/api/admin/service-types"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "type": "text/javascript",
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test(\"Service type is created\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "    pm.expect(jsonData.data).to.have.property('id');",
              "    pm.environment.set(\"serviceTypeId\", jsonData.data.id);",
              "});"
            ]
          }
        }
      ]
    },
    {
      "name": "Set Article Service Prices",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{adminToken}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"articleId\": \"{{articleId}}\",\n  \"serviceTypeId\": \"{{serviceTypeId}}\",\n  \"basePrice\": 1000,\n  \"premiumPrice\": 1500,\n  \"pricePerKg\": 200\n}"
        },
        "url": "{{baseUrl}}/api/admin/article-prices"
      },
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "",
              "pm.test(\"Price is set correctly\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData.success).to.eql(true);",
              "    pm.expect(jsonData.data).to.have.property('id');",
              "    pm.environment.set(\"priceId\", jsonData.data.id);",
              "});"
            ]
          }
        }
      ]
    }
  ]
}

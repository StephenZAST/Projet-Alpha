// Main Prisma schema file
// Learn more about it in the docs: https://pris.ly/d/prisma-schema

// Import all modular schemas
import * from "./schemas/core"
import * from "./schemas/auth_user"
import * from "./schemas/order_product"
import * from "./schemas/business"

/*
DOCUMENTATION DE LA BASE DE DONNÉES

Pour obtenir une liste complète et à jour des fonctions et procédures stockées de la base de données,
utilisez le script SQL fourni dans le fichier 'db_functions.sql'.

Exécutez-le dans votre client PostgreSQL avec :
```sql
\i db_functions.sql
```

Ce script liste toutes les fonctions et procédures du schéma public avec :
- Leur nom
- Leur type (Function/Procedure)
- Leur code source complet
- Leur description (si disponible)
*/

// Principales Procédures Stockées Documentées
/*
1. create_order_with_items
Description: Gère la création de commande avec tous les articles
Localisation: backend/prisma/migrations/[timestamp]_stored_procedures.sql
Paramètres:
  - p_userId UUID               -- User creating the order
  - p_serviceId UUID           -- Selected service
  - p_addressId UUID           -- Delivery address
  - p_isRecurring BOOLEAN      -- Recurring order flag
  - p_recurrenceType TEXT      -- Type of recurrence
  - p_collectionDate TIMESTAMPTZ -- Collection date
  - p_deliveryDate TIMESTAMPTZ -- Delivery date
  - p_affiliateCode TEXT       -- Optional affiliate code
  - p_service_type_id UUID     -- Service type
  - p_paymentMethod TEXT       -- Payment method
  - p_items JSON[]             -- Array of order items
Retourne: UUID (order_id)

2. process_affiliate_commission
Description: Gère le calcul et la distribution des commissions
Localisation: backend/prisma/migrations/20250129_affiliate_procedures.sql
Paramètres:
  - p_order_id UUID           -- Order ID for commission
  - p_order_amount DECIMAL    -- Order amount for calculation
  - p_affiliate_code TEXT     -- Affiliate code used
Retourne: void

3. update_affiliate_level
Description: Met à jour le niveau d'un affilié basé sur ses gains
Localisation: backend/prisma/migrations/20250129_affiliate_procedures.sql
Paramètres:
  - p_affiliate_id UUID      -- Affiliate ID to update
Retourne: void

4. reset_monthly_earnings
Description: Réinitialise les gains mensuels de tous les affiliés actifs
Localisation: backend/prisma/migrations/20250129_affiliate_procedures.sql
Paramètres: Aucun
Retourne: void
*/

// Database Triggers
/*
1. before_order_insert
Table: orders
Événement: BEFORE INSERT
Description: Vérifie et calcule les prix avant insertion d'une commande

2. after_order_status_update
Table: orders
Événement: AFTER UPDATE OF status
Description: Gère les notifications et points de fidélité après changement de statut

3. after_commission_transaction
Table: commission_transactions
Événement: AFTER INSERT
Description: Met à jour les soldes des affiliés après nouvelle commission
*/

// Important Indexes
/*
1. Users & Authentication
- users_email_idx (email)
- users_referral_code_idx (referral_code)
- users_instance_id_idx (instance_id, email)

2. Orders
- orders_status_idx (status)
- orders_user_id_idx (user_id)
- orders_created_at_idx (created_at)
- orders_affiliate_code_idx (affiliate_code)

3. Affiliates
- affiliate_profiles_code_idx (affiliate_code)
- affiliate_profiles_user_id_idx (user_id)
- affiliate_transactions_status_idx (status)

4. Articles & Services
- articles_category_id_idx (category_id)
- services_name_idx (name)
- article_services_article_id_idx (article_id, service_id)

5. Notifications & Offers
- notifications_user_id_type_idx (user_id, type)
- offers_active_dates_idx (is_active, start_date, end_date)
*/

// Foreign Key Constraints
/*
1. User Relations
- addresses_user_id_fkey
- orders_user_id_fkey
- notifications_user_id_fkey
- loyalty_points_user_id_fkey

2. Order Relations
- order_items_order_id_fkey
- order_items_article_id_fkey
- order_items_service_id_fkey

3. Affiliate Relations
- affiliate_profiles_user_id_fkey
- affiliate_profiles_parent_id_fkey
- commission_transactions_affiliate_id_fkey

4. Blog Relations
- blog_articles_category_id_fkey
- blog_articles_author_id_fkey
*/
